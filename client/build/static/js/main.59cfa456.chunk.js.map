{"version":3,"sources":["redux/auth.tsx","env.tsx","redux/images.tsx","redux/store.tsx","components/topBar/index.tsx","components/imageForm/index.tsx","components/imagesList/index.tsx","dashboard.tsx","App.tsx","index.tsx"],"names":["ACTIONS","env","userState","id_token","cleanSearchParams","newURL","window","location","href","split","history","pushState","document","title","getHeaders","tokenLocalStorage","localStorage","getItem","headers","JSON","parse","getLogInAddress","initialState","getImagesList","dispatch","a","axios","get","res","type","GET","payload","data","console","log","open","rootReducer","combineReducers","auth","state","action","SAVE","setItem","stringify","images","TopBar","className","icon","faSignOutAlt","onClick","removeItem","initialForm","description","image","initialErrors","ImageForm","useDispatch","useState","formState","setFormState","showLoadingSpin","setShowLoadingSpin","errors","setErrors","handleForm","event","target","files","value","hasError","undefined","name","genereteS3SignedURL","sendImage","signedURL","put","sendForm","imageName","post","isValidForm","Object","entries","item","handleUploadForm","Key","imageUploadURL","uploadURL","onChange","required","rows","color","height","width","initialArray","ImagesList","useSelector","store","showResults","setShowResults","getImages","useEffect","imagesRenderer","map","index","newShowResults","handleTitleButtons","faAngleUp","size","faAngleDown","src","alt","reverse","Dashboard","showLoadingSpind","setShowLoadingSpind","setup","params","URLSearchParams","search","append","App","createStore","compose","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.59cfa456.chunk.js","sourcesContent":["import axios from \"axios\"\n\nimport { Dispatch } from \"react\"\nimport { env } from \"../env\"\n\n// Constants\nenum ACTIONS {\n  SAVE = \"API/TOKEN/SAVE\"\n}\n\ninterface IResponse {\n  id_token: string\n}\n\ninterface IAction {\n  type: ACTIONS,\n  payload: IResponse\n}  \n\nconst userState:IResponse = {\n  id_token: \"\"\n}\n\nexport default function authReducer(state = userState, action: IAction): IResponse {\n  switch(action.type) {\n    case ACTIONS.SAVE:\n      localStorage.setItem(\"raysecurToken\", JSON.stringify(action.payload.id_token))\n      return action.payload\n    default:\n      return state\n  } \n}\n\nconst cleanSearchParams = () => {\n  const newURL = window.location.href.split(\"?\")[0]\n  window.history.pushState('object', document.title, newURL)\n}\n\nexport function setupToken() {\n  return async (dispatch:Dispatch<IAction>) => {\n    try{\n      const params = new URLSearchParams(window.location.search)\n      if(!params.get(\"code\")) {throw \"code not found\"}\n\n      cleanSearchParams()\n      params.append(\"client_id\", env.CLIENT_ID)\n      params.append(\"redirect_uri\", env.REDIRECT_URI)\n      params.append(\"grant_type\", \"authorization_code\")\n\n      const res = await axios.post(`${env.AUTH_ADDRESS}/oauth2/token`, params)\n\n      dispatch({\n        type: ACTIONS.SAVE,\n        payload: res.data\n      })\n    } catch(e) {\n      console.log(e)\n    }\n  }\n}\n\nexport function getHeaders() {\n  let tokenLocalStorage = localStorage.getItem(\"raysecurToken\")\n  if (!tokenLocalStorage){ return {} }\n  const token = JSON.parse(tokenLocalStorage)\n  return {headers:{\"Authorization\": token}}\n}\n\nexport function getLogInAddress() {\n  return `${env.AUTH_ADDRESS}/login?client_id=${env.CLIENT_ID}&response_type=code&scope=email+openid&redirect_uri=${env.REDIRECT_URI}`\n}\n\nexport function getLogOutAddress() {\n  return `${env.AUTH_ADDRESS}/logout?client_id=${env.CLIENT_ID}&logout_uri=${getLogInAddress()}`\n}","export const env = {\n  AUTH_ADDRESS: \"https://raysecur-001.auth.us-east-2.amazoncognito.com\",\n  CLIENT_ID: \"66mn9kmr2p06hrl4bombr1r294\",\n  REDIRECT_URI: \"http://18.188.12.132\",\n  API_ADDRESS: \"https://mgtxx7581l.execute-api.us-east-2.amazonaws.com/prod\"\n}","import axios from \"axios\"\n\nimport { Dispatch } from \"react\"\nimport { env } from \"../env\"\nimport { getHeaders, getLogInAddress } from \"./auth\"\n\n// Constants\nenum ACTIONS {\n  GET = \"API/IMAGES/GET\"\n}\n\ninterface IResponse {\n  title: string,\n  description: string,\n  image: string\n}\n\ninterface IAction {\n  type: ACTIONS,\n  payload: IResponse[]\n}  \n\nconst initialState:IResponse[] = []\n\nexport default function ImagesReducer(state = initialState, action: IAction): IResponse[] {\n  switch(action.type) {\n    case ACTIONS.GET:\n      return action.payload\n    default:\n      return state\n  } \n}\n\nexport function getImagesList() {\n  return async (dispatch:Dispatch<IAction>) => {\n    try{\n      const res = await axios.get(`${env.API_ADDRESS}/images`, getHeaders())\n      dispatch({\n        type: ACTIONS.GET,\n        payload: res.data\n      })\n    } catch(e) {\n      console.log(e)\n      window.open(getLogInAddress(),\"_self\") \n    }\n  }\n}","import thunk from \"redux-thunk\"\nimport authReducer from \"./auth\"\nimport imagesReducer from \"./images\"\n\nimport { applyMiddleware, combineReducers, compose, createStore } from \"redux\"\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    images: imagesReducer\n})\n\nexport default function generateStore() {\n    return createStore(rootReducer, compose(applyMiddleware(thunk)))\n}\n\nexport type RootState = ReturnType<typeof rootReducer>","import \"./index.scss\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\"\nimport { getLogOutAddress } from \"../../redux/auth\"\n\nfunction TopBar() {\n\n  const handleLogOut = () => {\n    localStorage.removeItem(\"raysecurToken\")\n    window.open(getLogOutAddress(),\"_self\")\n  }\n\n  return (\n    <div className=\"top-bar\">\n      <div className=\"top-bar__info\">\n        RAYSECUR\n      </div>\n      \n      <div className=\"top-bar__buttons\">\n        <FontAwesomeIcon icon={faSignOutAlt} className=\"top-bar__buttons__logout\" onClick={handleLogOut}/>\n      </div>\n    </div>\n  )\n}\n\nexport default TopBar;\n","import \"./index.scss\"\n\nimport Loader from \"react-loader-spinner\"\nimport axios from \"axios\"\n\nimport { useState, ChangeEvent } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { env } from \"../../env\"\nimport { getHeaders } from \"../../redux/auth\"\nimport { getImagesList } from \"../../redux/images\"\n\n\nconst initialForm = {\n  title: \"\",\n  description: \"\",\n  image: null\n}\n\nconst initialErrors = {\n  title: false,\n  description: false,\n  image: false\n}\n\nfunction ImageForm() {\n\n  const dispatch = useDispatch()\n  const [formState, setFormState] = useState(initialForm);\n  const [showLoadingSpin, setShowLoadingSpin] = useState(false)\n  const [errors, setErrors] = useState(initialErrors)\n\n  const handleForm = (event:ChangeEvent) => {\n    const target = event.target as HTMLInputElement\n    const data = target.files ? target.files[0] : target.value\n    const hasError = data === null || data === '' || data === undefined\n\n    setErrors({...errors, [target.name]: hasError})\n    setFormState({...formState, [target.name]: data})\n  }\n\n  const genereteS3SignedURL = async () => {\n    return await axios.get(`${env.API_ADDRESS}/upload`, getHeaders())\n  }\n  const sendImage = async (signedURL:string) => {\n    return await axios.put(signedURL, formState.image)\n  }\n  const sendForm = async (imageName:string) => {\n    const payload = {\n      ...formState,\n      image: imageName\n    }\n    return await axios.post(`${env.API_ADDRESS}/images`, payload, getHeaders())\n  }\n\n  const isValidForm = (): boolean => {\n    for(let item of Object.entries(formState)) {\n      if(item[1] === null || item[1] === '' || item[1] === undefined){\n        setErrors({...errors, [item[0]]: true})\n        return false\n      }\n    }\n    return true\n  }\n\n  const handleUploadForm = async () => {\n    if (!isValidForm()) { return }\n    setShowLoadingSpin(true)\n    const signedURL = await genereteS3SignedURL()\n    const imageName = signedURL.data.Key.split(\"/\")[1]\n    const imageUploadURL = signedURL.data.uploadURL\n    await sendImage(imageUploadURL)\n    await sendForm(imageName)\n    await dispatch(getImagesList())   \n    setShowLoadingSpin(false)\n  }\n\n  return (\n    <div className=\"image-form\">\n      <div className={`form-group ${errors.title ? \"showError\" : \"hideError\"}`}>\n        <label>Title</label>\n        <input type=\"text\" className=\"form-control\" name=\"title\" onChange={handleForm} required/>\n        <div className=\"message-error-feedback\">\n          Please provide a Title\n        </div>\n      </div>\n      <div className={`form-group ${errors.description ? \"showError\" : \"hideError\"}`}>\n        <label>Description</label>\n        <textarea className=\"form-control\" rows={3} name=\"description\" onChange={handleForm}/>\n        <div className=\"message-error-feedback\">\n          Please provide a Description\n        </div>\n      </div>\n      <div className={`form-group ${errors.image ? \"showError\" : \"hideError\"}`}>\n        <label>Image</label>\n        <div>\n          <input type=\"file\" onChange={handleForm} name=\"image\"/>\n          <div className=\"message-error-feedback\">\n            Please provide a Image\n          </div>\n        </div>\n      </div>\n      <div className=\"form-group image-form__upload-button\">\n        {\n          showLoadingSpin ?\n          <div>\n            <Loader\n              type=\"Oval\"\n              color=\"#666666\"\n              height={25}\n              width={25}\n            />\n          </div> :\n          <button type=\"button\" className=\"btn btn-primary\" onClick={handleUploadForm}>Upload</button>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default ImageForm;\n","import \"./index.scss\"\n\nimport Loader from \"react-loader-spinner\"\n\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { RootState } from \"../../redux/store\"\nimport { useEffect, useState } from \"react\"\nimport { getImagesList } from \"../../redux/images\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faAngleUp, faAngleDown } from \"@fortawesome/free-solid-svg-icons\"\n\n\nconst initialArray:Array<boolean>  = []\n\nfunction ImagesList() {\n\n  const images = useSelector((store:RootState) => store.images)\n  const [showResults, setShowResults] = useState(initialArray)\n  const [showLoadingSpin, setShowLoadingSpin] = useState(false)\n\n  const getImages = async () => {\n    setShowLoadingSpin(true)\n    await dispatch(getImagesList())\n    setShowLoadingSpin(false)\n  }\n\n  const dispatch = useDispatch()\n  useEffect( () => {\n    getImages()\n  }, [dispatch])\n\n  const handleTitleButtons = (index:number) => {\n    console.log(index)\n    let newShowResults:Array<boolean> = [...showResults]\n    newShowResults[index] =! newShowResults[index]\n    setShowResults(newShowResults)\n  }\n\n  const imagesRenderer = images.map((item, index) => {\n    return(\n      <div key={index} className=\"images__item\">\n        <div className=\"images__item__title\" onClick={()=> handleTitleButtons(index)}>\n          <div>{item.title}</div>\n          <div className=\"images__item__title__buttons\">\n            {\n              showResults[index] ? \n                <FontAwesomeIcon icon={faAngleUp} size=\"2x\" /> :\n                <FontAwesomeIcon icon={faAngleDown} size=\"2x\" />\n            }\n          </div>\n        </div>\n        {\n          showResults[index] ? \n          <div>\n            <div className=\"images__item__description\">{item.description}</div>\n            <div className=\"images__item__image\">\n              <img src={item.image} alt=\"\"/>\n            </div>\n          </div> :\n          null \n        }\n      </div>\n    )\n  })\n  imagesRenderer.reverse()\n  return (\n    <div className=\"images\">\n      {\n        imagesRenderer\n      }\n      {\n        showLoadingSpin ?\n        <div className=\"images__loading\">\n          <Loader\n            type=\"Oval\"\n            color=\"#666666\"\n            height={100}\n            width={100}\n          />\n        </div> :\n        null\n      }\n      \n    </div>\n  )\n}\n\nexport default ImagesList;\n","import \"./dashboard.scss\"\n\nimport TopBar from \"./components/topBar\"\nimport ImageForm from \"./components/imageForm\"\nimport ImagesList from \"./components/imagesList\"\nimport Loader from \"react-loader-spinner\"\n\nimport { useEffect, useState } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { setupToken } from \"./redux/auth\"\n\nfunction Dashboard() {\n  const dispatch = useDispatch()\n\n  const [showLoadingSpind, setShowLoadingSpind] = useState(true)\n\n  const setup = async () => {\n    setShowLoadingSpind(true)\n    await dispatch(setupToken())\n    setShowLoadingSpind(false)\n  }\n\n  useEffect(() => {\n    setup()\n  }, [dispatch])\n\n  return (\n    <div className=\"dashboard\">\n      {\n        showLoadingSpind ?\n        <div className=\"dashboard__loading\">\n          <Loader\n            type=\"Oval\"\n            color=\"#666666\"\n            height={100}\n            width={100}\n          />\n        </div> :\n        <div>\n          <TopBar />\n          <div className=\"dashboard__body\">\n            <ImageForm />\n            <ImagesList />\n          </div>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default Dashboard;\n","import generateStore from \"./redux/store\"\nimport Dashboard from \"./dashboard\"\n\nimport {Provider} from \"react-redux\"\n\nfunction App() {\n  const store = generateStore()\n  return (\n    <Provider store={store}>\n      <Dashboard />\n    </Provider>\n  );\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.css'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}